package com.juli.serviceverificationcode.service.impl;import com.juli.internalcommon.dto.ResponseResult;import com.juli.internalcommon.dto.serviceverificationcode.response.VerifyCodeResponse;import com.juli.serviceverificationcode.service.VerifyCodeService;import org.springframework.stereotype.Service;import java.util.Random;/** * @author ：Juli * @date ： 2023/2/10 3:03 PM * @description： * @modifiedBy ： * @version: */@Servicepublic class VerifyCodeServiceImpl implements VerifyCodeService {    @Override    public ResponseResult<VerifyCodeResponse> generate(int identity, String phoneNum) {        // 生成验证码        // 方式一 不推荐 字符串的操作消耗大        String code1 = (Math.random() + "").substring(2, 8);        // 方式二 不推荐 会出现不到6位的        String code2 = String.valueOf(new Random().nextInt(100000));        // 0.9*9=8.1+1 9,去掉首位为0的情况。 0.11225478552211(0.0-<1)        String code = String.valueOf((int) ((Math.random() * 9 + 1) * Math.pow(10, 5)));        // 校验三档验证。乌云安全检测。业务方控制，不能无限制发短信。        // redis 5分钟发了3次，限制10分钟内不能发。1小时发10次，限制24小时内不能发。        // 详见 乘客端PRD        VerifyCodeResponse codeResponse = new VerifyCodeResponse(code);        return ResponseResult.success(codeResponse);    }}